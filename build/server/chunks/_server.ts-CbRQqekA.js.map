{"version":3,"file":"_server.ts-CbRQqekA.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/paste/_server.ts.js"],"sourcesContent":["import { j as json } from \"../../../../chunks/index.js\";\nimport { p as prisma } from \"../../../../chunks/prisma.js\";\nimport { g as getPaste } from \"../../../../chunks/services.js\";\nimport { g as getUserIdFromCookie } from \"../../../../chunks/auth.js\";\nimport { p as public_env } from \"../../../../chunks/shared-server.js\";\nconst GET = async ({ url }) => {\n  const key = url.searchParams.get(\"key\");\n  if (!key) {\n    return json(\n      { success: false, error: \"No key provided\" },\n      { status: 400 }\n    );\n  }\n  let paste;\n  try {\n    paste = await getPaste(key);\n  } catch (e) {\n    if (e?.constructor?.name === \"HttpError\") {\n      const httpError = e;\n      return json(\n        { success: false, error: httpError.body.message },\n        { status: httpError.status }\n      );\n    }\n    return json(\n      { success: false, error: \"An error occurred\" },\n      { status: 500 }\n    );\n  }\n  if (!paste) {\n    return json(\n      { success: false, error: \"Paste not found\" },\n      { status: 404 }\n    );\n  }\n  console.log(paste);\n  const response = {\n    success: true,\n    data: paste\n  };\n  return json(response);\n};\nconst POST = async ({ cookies, request }) => {\n  const { content, config, passwordProtected, initVector } = await request.json();\n  const userId = await getUserIdFromCookie(cookies);\n  if (public_env.PUBLIC_ANONYMOUS_PASTES_ENABLED === \"false\" && !userId) {\n    return json(\n      {\n        success: false,\n        error: \"Anonymous pastes are disabled\"\n      },\n      {\n        status: 403\n      }\n    );\n  }\n  let key = void 0;\n  if (config?.customPath && (public_env.PUBLIC_CUSTOM_PATHS_ENABLED === \"true\" || userId)) {\n    key = config.customPath.substring(0, 16);\n    if (await prisma.paste.findUnique({ where: { key } })) {\n      return json(\n        {\n          success: false,\n          error: \"Custom path already exists\"\n        },\n        {\n          status: 400\n        }\n      );\n    }\n  }\n  if (!key) {\n    let attempts = 0;\n    let keyLength = 5;\n    key = randomString(keyLength);\n    while (await prisma.paste.findUnique({ where: { key } })) {\n      key = randomString(keyLength);\n      attempts++;\n      if (attempts > 1) {\n        keyLength++;\n        attempts = 0;\n      }\n    }\n  }\n  await prisma.paste.create({\n    data: {\n      key,\n      content,\n      language: config?.language ?? \"plaintext\",\n      encrypted: config?.encrypted ?? false,\n      passwordProtected,\n      expiresCount: config?.burnAfterRead ? 2 : null,\n      initVector,\n      expiresAt: config?.expiresAfter ? new Date(Date.now() + config.expiresAfter * 1e3) : null,\n      ownerId: userId\n    }\n  });\n  const response = {\n    success: true,\n    data: { key }\n  };\n  return json(response);\n};\nconst PATCH = async ({ cookies, request }) => {\n  const { key, content, encrypted, initVector } = await request.json();\n  const userId = await getUserIdFromCookie(cookies);\n  if (!key && !content) {\n    return json(\n      { success: false, error: \"No key provided\" },\n      {\n        status: 400\n      }\n    );\n  }\n  if (encrypted && !initVector) {\n    return json(\n      {\n        success: false,\n        error: \"No initVector provided\"\n      },\n      {\n        status: 400\n      }\n    );\n  }\n  const paste = await prisma.paste.findUnique({ where: { key } });\n  if (!paste) {\n    return json(\n      { success: false, error: \"Paste not found\" },\n      {\n        status: 404\n      }\n    );\n  }\n  if (paste.ownerId !== userId) {\n    return json(\n      { success: false, error: \"Unauthorized\" },\n      {\n        status: 401\n      }\n    );\n  }\n  await prisma.paste.update({\n    where: { key },\n    data: {\n      content,\n      initVector\n    }\n  });\n  return json({\n    success: true,\n    data: { key }\n  });\n};\nfunction randomString(length) {\n  const chars = \"0123456789abcdefghijklmnopqrstuvwxyz\";\n  let result = \"\";\n  for (let i = length; i > 0; --i)\n    result += chars[Math.floor(Math.random() * chars.length)];\n  return result;\n}\nexport {\n  GET,\n  PATCH,\n  POST\n};\n"],"names":[],"mappings":"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"}